pipeline {

    agent {
        docker {
            image 'dhananjaypuri/mvn-git-jenkins-agent:latest'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    stages {

        stage('Code Checkout'){

            steps {
                echo "Code Checkout Stage"
                sh 'ls'
            }
        }

        stage('Build By Maven'){


            steps {
                echo "Code Build Stage"
                sh 'mvn install'
            }
        }

        stage('Static Code Analysis'){

            environment {

                SONAR_URL = "http://54.221.66.251:9000/"
            }
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
            }

            }
        }

        stage('Build Image'){
            environment {
                IMAGE_NAME = "dhananjaypuri/tomcat:${BUILD_ID}"
                DOCKER_UNAME = "dhananjaypuri"
                DOCKER_PASS = credentials('docker_secret_pass')
            }

            steps {
                echo "Code Push Stage"
                sh '''
                ls
                ls target/
                if docker image rmi -f $(docker image ls | grep dhananjaypuri/tomcat | awk '{print $3}')
                then
                    echo "Image cleaned"
                fi
                docker build -t ${IMAGE_NAME} .
                docker images
                echo ${DOCKER_PASS} | docker login -u ${DOCKER_UNAME} --password-stdin
                docker image push ${IMAGE_NAME}
                '''
            }
        }

    }

}
